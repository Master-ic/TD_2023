
`timescale 1ns/1ps
/************************************************************\
 **  Copyright (c) 2011-2022 Anlogic, Inc.
 **  All Right Reserved.\
\************************************************************/
/************************************************************\
 ** Log	:	This file is generated by Anlogic IP Generator.
 ** File	:	C:/Users/zhang/Desktop/work/FPGA/PWM/td_project/al_ip/SF1_MCU.v
 ** Date	:	2022 09 18
 ** TD version	:	5.6.59063
\************************************************************/
//`include "param_sf1_mcu_core.v"
module SF1_MCU (soft_ip_apbm_en, 
        qspi0cfg1_mode, 
        qspi0cfg2_mode, 
        jtag_tck, 
        jtag_tdo, 
        jtag_tms, 
        jtag_tdi, 
        htrans, 
        hwrite, 
        haddr, 
        hsize, 
        hburst, 
        hprot, 
        hmastlock, 
        hwdata, 
        hclk, 
        hrdata, 
        hresp, 
        hready, 
        uart_tx, 
        uart_rx, 
        gpio0_out, 
        gpio0_dir, 
        gpio0_in, 
        gpio1_out, 
        gpio1_dir, 
        gpio1_in, 
        gpio2_out, 
        gpio2_dir, 
        gpio2_in, 
        timer_clk, 
        mtip, 
        core_clk, 
        core_reset, 
        nmi, 
        clic_irq, 
        sysrstreq, 
        apb_clk_down, 
        apb_paddr_down, 
        apb_penable_down, 
        apb_pprot_down, 
        apb_prdata_down, 
        apb_pready_down, 
        apb_pslverr_down, 
        apb_pstrobe_down, 
        apb_pwdata_down, 
        apb_pwrite_down, 
        apb_psel0_down, 
        apb_psel1_down, 
        apb_psel2_down) ;
    input soft_ip_apbm_en ; 
    input qspi0cfg1_mode ; 
    input qspi0cfg2_mode ; 
    input jtag_tck ; 
    output jtag_tdo ; 
    input jtag_tms ; 
    input jtag_tdi ; 
    output [1:0] htrans ; 
    output hwrite ; 
    output [31:0] haddr ; 
    output [2:0] hsize ; 
    output [2:0] hburst ; 
    output [3:0] hprot ; 
    output hmastlock ; 
    output [31:0] hwdata ; 
    input hclk ; 
    input [31:0] hrdata ; 
    input [1:0] hresp ; 
    input hready ; 
    output uart_tx ; 
    input uart_rx ; 
    input gpio0_in ; 
    output gpio0_out ; 
    output gpio0_dir ; 
    input gpio1_in ; 
    output gpio1_out ; 
    output gpio1_dir ; 
    input gpio2_in ; 
    output gpio2_out ; 
    output gpio2_dir ; 
    input timer_clk ; 
    output mtip ; 
    input core_clk ; 
    input core_reset ; 
    input nmi ; 
    input [15:0] clic_irq ; 
    output sysrstreq ; 
    output apb_clk_down ; 
    input [31:0] apb_prdata_down ; 
    output [31:0] apb_pwdata_down ; 
    output [3:0] apb_pstrobe_down ; 
    output [2:0] apb_pprot_down ; 
    output apb_penable_down ; 
    output apb_pwrite_down ; 
    input apb_pslverr_down ; 
    input apb_pready_down ; 
    output [11:0] apb_paddr_down ; 
    output apb_psel0_down ; 
    output apb_psel1_down ; 
    output apb_psel2_down ; 
    // ====================================================================
    // Parameter/wire/reg
    // ====================================================================
    wire jtag_bk_tms ; 
    wire jtag_drv_tms ; 
    wire jtag_tms_out ; 
    wire jtag_dwen ; 
    // ====================================================================
    // Primitive instance
    // ====================================================================
    // --------------------------------------------------------------------
    // MCU
    // --------------------------------------------------------------------
    SF1_LOGIC_MCU #(.RESET_VECTOR(32'b011100000000000000000)) SF1_LOGIC_MCU_inst (.soft_ip_apbm_en(soft_ip_apbm_en), 
                .qspi0cfg1_mode(qspi0cfg1_mode), 
                .qspi0cfg2_mode(qspi0cfg2_mode), 
                .jtag_tdo(jtag_tdo), 
                .jtag_bk_tms(jtag_bk_tms), 
                .jtag_drv_tms(jtag_drv_tms), 
                .jtag_tms_out(jtag_tms_out), 
                .jtag_dwen(jtag_dwen), 
                .htrans(htrans), 
                .hwrite(hwrite), 
                .haddr(haddr), 
                .hsize(hsize), 
                .hburst(hburst), 
                .hprot(hprot), 
                .hmastlock(hmastlock), 
                .hwdata(hwdata), 
                .ext_apb_clk(1'b0), 
                .ext_apb_pprot(3'b0), 
                .ext_apb_pstrobe(4'b0), 
                .ext_apb_addr(20'b0), 
                .ext_apb_psel(1'b0), 
                .uart_tx(uart_tx), 
                .i2c_sda_out(), 
                .i2c_sda_sel(), 
                .i2c_scl_out(), 
                .i2c_scl_sel(), 
                .qspi1_ss(), 
                .qspi1_mosi(), 
                .qspi1_d1_out(), 
                .qspi1_d2_out(), 
                .qspi1_d3_out(), 
                .gpio0_out(gpio0_out), 
                .gpio0_dir(gpio0_dir), 
                .gpio1_out(gpio1_out), 
                .gpio1_dir(gpio1_dir), 
                .gpio2_out(gpio2_out), 
                .gpio2_dir(gpio2_dir), 
                .gpio3_out(), 
                .gpio3_dir(), 
                .gpio4_out(), 
                .gpio4_dir(), 
                .gpio5_out(), 
                .gpio5_dir(), 
                .gpio6_out(), 
                .gpio6_dir(), 
                .gpio7_out(), 
                .gpio7_dir(), 
                .dlm_doa(), 
                .mtip(mtip), 
                .mcu_dbg_o(), 
                .core_clk(core_clk), 
                .core_reset(core_reset), 
                .timer_clk(timer_clk), 
                .nmi(nmi), 
                .clic_irq(clic_irq), 
                .sysrstreq(sysrstreq), 
                .hclk(hclk), 
                .hrdata(hrdata), 
                .hresp(hresp), 
                .hready(hready), 
                .uart_rx(uart_rx), 
                .i2c_sda_in(1'b0), 
                .i2c_scl_in(1'b0), 
                .qspi1_clk(), 
                .qspi1_d0_in(1'b0), 
                .qspi1_miso(1'b0), 
                .qspi1_d2_in(1'b0), 
                .qspi1_d3_in(1'b0), 
                .qspi1_dir(), 
                .gpio0_in(gpio0_in), 
                .gpio1_in(gpio1_in), 
                .gpio2_in(gpio2_in), 
                .gpio3_in(1'b0), 
                .gpio4_in(1'b0), 
                .gpio5_in(1'b0), 
                .gpio6_in(1'b0), 
                .gpio7_in(1'b0), 
                .dlm_clka(1'b0), 
                .dlm_addra(11'b0), 
                .dlm_dia(32'b0), 
                .dlm_cea(1'b0), 
                .dlm_byte_wea(4'b0), 
                .mcu_dbg_sel(3'b0), 
                .apb_clk(apb_clk_down), 
                .apb_prdata(apb_prdata_down), 
                .apb_pwdata(apb_pwdata_down), 
                .apb_pstrobe(apb_pstrobe_down), 
                .apb_pprot(apb_pprot_down), 
                .apb_penable(apb_penable_down), 
                .apb_pwrite(apb_pwrite_down), 
                .apb_pslverr_i(apb_pslverr_down), 
                .apb_pready_i(apb_pready_down), 
                .apb_paddr_o(apb_paddr_down), 
                .apb_psel0_o(apb_psel0_down), 
                .apb_psel1_o(apb_psel1_down), 
                .apb_psel2_o(apb_psel2_down)) ; 
    // --------------------------------------------------------------------
    // JTAG
    // --------------------------------------------------------------------
    SF1_LOGIC_MCU_JTAG SF1_LOGIC_MCU_JTAG_inst (.tck_i(jtag_tck), 
                .tms_i(jtag_tms), 
                .tdi_i(jtag_tdi)) ; 
    // --------------------------------------------------------------------
    // Flash
    // --------------------------------------------------------------------
    wire flash_mosi, 
        flash_miso, 
        flash_wp_n, 
        flash_hold_n, 
        flash_sck, 
        flash_cs_n ; 
    SF1_LOGIC_IOTRIBUF u0 (.io(flash_mosi)) ; 
    SF1_LOGIC_IOTRIBUF u1 (.io(flash_miso)) ; 
    SF1_LOGIC_IOTRIBUF u2 (.io(flash_wp_n)) ; 
    SF1_LOGIC_IOTRIBUF u3 (.io(flash_hold_n)) ; 
    SF1_LOGIC_IOBUF u4 (.o(flash_sck)) ; 
    SF1_LOGIC_IOBUF u5 (.o(flash_cs_n)) ; 
    SF1_PHY_INTFLASH SF1_PHY_INTFLASH_inst (.mosi_io0(flash_mosi), 
                .miso_io1(flash_miso), 
                .wp_n_io2(flash_wp_n), 
                .hold_n_io3(flash_hold_n), 
                .cclk(flash_sck), 
                .cs_n(flash_cs_n)) ; 
endmodule


